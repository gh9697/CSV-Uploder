{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/henil-acespritech/workspace/React/csv_uploader/src/component/Table.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport HeadSelector from './FieldSelection';\nimport './Table.css';\n\nfunction Table({\n  data\n}) {\n  _s();\n\n  const [newData, setNewData] = useState([]);\n\n  const renderTableData = object => {\n    return object.data.map((data, index) => {\n      return /*#__PURE__*/_jsxDEV(\"td\", {\n        children: data\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 21\n      }, this);\n    });\n  };\n\n  const handleClick = e => {\n    console.log(e.target.nodeName, e.target.parentElement.nodeName, data);\n\n    if (e.target.nodeName === 'INPUT' && e.target.parentElement.nodeName === 'TH') {\n      let tbody = document.getElementsByTagName('tbody')[0],\n          checks = [...tbody.getElementsByTagName('input')],\n          rows = [...tbody.children];\n      rows.forEach(it => {\n        it.classList.remove('selection');\n      });\n\n      if (e.target.checked) {\n        checks.forEach((item, index) => {\n          item.checked = true;\n          rows[index].classList.add('selection');\n        });\n      } else {\n        checks.forEach((item, index) => {\n          item.checked = false;\n          rows[index].classList.remove('selection');\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => handleClick(e),\n        children: \"Delete Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      id: \"Info\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: e => handleClick(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(HeadSelector, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(HeadSelector, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(HeadSelector, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(HeadSelector, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data && data.map((value, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onClick: e => handleClick(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 37\n            }, this), renderTableData(value)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Table, \"WPzCvzBOkkCzTNRL9H6cvcP+Mhc=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/home/henil-acespritech/workspace/React/csv_uploader/src/component/Table.js"],"names":["useState","HeadSelector","Table","data","newData","setNewData","renderTableData","object","map","index","handleClick","e","console","log","target","nodeName","parentElement","tbody","document","getElementsByTagName","checks","rows","children","forEach","it","classList","remove","checked","item","add","value"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport HeadSelector from './FieldSelection';\nimport './Table.css';\n\nfunction Table({data}) {\n    const [newData, setNewData] = useState([]);\n\n    const renderTableData = (object) => {\n        return object.data.map((data,index) => {\n            return  <td key={index}>{data}</td>;\n        });\n    }\n    const handleClick= (e) => {\n        console.log(e.target.nodeName,e.target.parentElement.nodeName,data);\n        if(e.target.nodeName === 'INPUT' && e.target.parentElement.nodeName === 'TH'){\n            let tbody = document.getElementsByTagName('tbody')[0],\n            checks = [...tbody.getElementsByTagName('input')],\n            rows = [...tbody.children];\n            rows.forEach((it)=>{\n                it.classList.remove('selection');\n            });\n            if(e.target.checked){\n               checks.forEach((item,index)=>{\n                  item.checked = true;\n                 rows[index].classList.add('selection');\n               });              \n            }\n            else{\n               checks.forEach((item,index)=>{\n                  item.checked = false;\n                 rows[index].classList.remove('selection');\n               });\n            }  \n        }\n    }\n\n    return (\n        <>\n            <div>\n                <button onClick={(e) => handleClick(e)}>Delete Row</button>\n            </div>\n            <table id=\"Info\">\n                <thead>\n                    <tr>\n                        <th><input type=\"checkbox\" onClick={(e) => handleClick(e)}/></th>\n                        <th><HeadSelector/></th>\n                        <th><HeadSelector/></th>\n                        <th><HeadSelector/></th>\n                        <th><HeadSelector/></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    { data &&   \n                        data.map((value,index) => {\n                            return <tr key={index}>\n                                    <td><input type=\"checkbox\" onClick={(e) => handleClick(e)}/></td>\n                                    {renderTableData(value)}\n                                </tr>;\n                        })\n                    }\n                </tbody>\n            </table>\n        </>\n    )\n}\nexport default Table;"]},"metadata":{},"sourceType":"module"}