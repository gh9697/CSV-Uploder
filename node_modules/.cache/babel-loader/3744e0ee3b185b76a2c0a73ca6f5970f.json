{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/henil-acespritech/workspace/React/csv_uploader/src/App.js\";\nimport React, { useCallback } from 'react';\nimport { CSVReader } from 'react-papaparse';\nimport './App.css';\nconst buttonRef = /*#__PURE__*/React.createRef();\n\nfunction App() {\n  const handleOpenDialog = e => {\n    // Note that the ref is set async, so it might be null at some point \n    if (buttonRef.current) {\n      buttonRef.current.open(e);\n    }\n  };\n\n  const handleOnFileLoad = data => {\n    console.log('---------------------------');\n    console.log(data);\n    console.log('---------------------------');\n  };\n\n  const handleOnError = (err, file, inputElem, reason) => {\n    console.log(err);\n  };\n\n  const handleOnRemoveFile = data => {\n    console.log('---------------------------');\n    console.log(data);\n    console.log('---------------------------');\n  };\n\n  const handleRemoveFile = e => {\n    // Note that the ref is set async, so it might be null at some point\n    if (buttonRef.current) {\n      buttonRef.current.removeFile(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(CSVReader, {\n      onDrop: this.handleOnDrop,\n      onError: this.handleOnError,\n      noDrag: true,\n      addRemoveButton: true,\n      onRemoveFile: this.handleOnRemoveFile,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Click to upload.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/henil-acespritech/workspace/React/csv_uploader/src/App.js"],"names":["React","useCallback","CSVReader","buttonRef","createRef","App","handleOpenDialog","e","current","open","handleOnFileLoad","data","console","log","handleOnError","err","file","inputElem","reason","handleOnRemoveFile","handleRemoveFile","removeFile","handleOnDrop"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAO,WAAP;AAEA,MAAMC,SAAS,gBAAGH,KAAK,CAACI,SAAN,EAAlB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAMC,gBAAgB,GAAIC,CAAD,IAAO;AAC9B;AACA,QAAIJ,SAAS,CAACK,OAAd,EAAuB;AACrBL,MAAAA,SAAS,CAACK,OAAV,CAAkBC,IAAlB,CAAuBF,CAAvB;AACD;AACF,GALD;;AAOA,QAAMG,gBAAgB,GAAIC,IAAD,IAAU;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD,GAJD;;AAMA,QAAMC,aAAa,GAAG,CAACC,GAAD,EAAMC,IAAN,EAAYC,SAAZ,EAAuBC,MAAvB,KAAkC;AACtDN,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,GAFD;;AAIA,QAAMI,kBAAkB,GAAIR,IAAD,IAAU;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD,GAJD;;AAMA,QAAMO,gBAAgB,GAAIb,CAAD,IAAO;AAC9B;AACA,QAAIJ,SAAS,CAACK,OAAd,EAAuB;AACrBL,MAAAA,SAAS,CAACK,OAAV,CAAkBa,UAAlB,CAA6Bd,CAA7B;AACD;AACF,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,SAAD;AACE,MAAA,MAAM,EAAE,KAAKe,YADf;AAEE,MAAA,OAAO,EAAE,KAAKR,aAFhB;AAGE,MAAA,MAAM,MAHR;AAIE,MAAA,eAAe,MAJjB;AAKE,MAAA,YAAY,EAAE,KAAKK,kBALrB;AAAA,6BAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;KA5CQd,G;AA8CT,eAAeA,GAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport { CSVReader } from 'react-papaparse'\nimport './App.css';\n\nconst buttonRef = React.createRef()\n\nfunction App() {\n  const handleOpenDialog = (e) => {\n    // Note that the ref is set async, so it might be null at some point \n    if (buttonRef.current) {\n      buttonRef.current.open(e)\n    }\n  }\n  \n  const handleOnFileLoad = (data) => {\n    console.log('---------------------------')\n    console.log(data)\n    console.log('---------------------------')\n  }\n\n  const handleOnError = (err, file, inputElem, reason) => {\n    console.log(err)\n  }\n\n  const handleOnRemoveFile = (data) => {\n    console.log('---------------------------')\n    console.log(data)\n    console.log('---------------------------')\n  }\n\n  const handleRemoveFile = (e) => {\n    // Note that the ref is set async, so it might be null at some point\n    if (buttonRef.current) {\n      buttonRef.current.removeFile(e)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <CSVReader\n        onDrop={this.handleOnDrop}\n        onError={this.handleOnError}\n        noDrag\n        addRemoveButton\n        onRemoveFile={this.handleOnRemoveFile}\n      >\n        <span>Click to upload.</span>\n      </CSVReader>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}