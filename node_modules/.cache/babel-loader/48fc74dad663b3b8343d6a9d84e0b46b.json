{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/henil-acespritech/workspace/React/csv_uploader/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { CSVReader } from 'react-papaparse';\nimport Table from './component/Table';\nimport './App.css';\nconst buttonRef = /*#__PURE__*/React.createRef();\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState([]);\n\n  const handleOpenDialog = e => {\n    // Note that the ref is set async, so it might be null at some point \n    if (buttonRef.current) {\n      buttonRef.current.open(e);\n    }\n  };\n\n  const handleOnDrop = data => {\n    let noOfColumns = data.map(item => {\n      if (item.data.length > noOfColumns) {\n        noOfColumns = item.data.length;\n      }\n\n      return noOfColumns;\n    });\n    console.log(\"col\", noOfColumns);\n    setData(data);\n  };\n\n  const handleOnError = (err, file, inputElem, reason) => {\n    console.log(err);\n  };\n\n  const handleOnRemoveFile = data => {\n    setData(data);\n  };\n\n  const handleRemoveFile = e => {\n    // Note that the ref is set async, so it might be null at some point\n    if (buttonRef.current) {\n      buttonRef.current.removeFile(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(CSVReader, {\n      onDrop: handleOnDrop,\n      onError: handleOnError,\n      noDrag: true,\n      addRemoveButton: true,\n      onRemoveFile: handleOnRemoveFile,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Click to upload.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"hhQqYsxLIv1exGOzUvDGOVv6fXw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/henil-acespritech/workspace/React/csv_uploader/src/App.js"],"names":["React","useState","CSVReader","Table","buttonRef","createRef","App","data","setData","handleOpenDialog","e","current","open","handleOnDrop","noOfColumns","map","item","length","console","log","handleOnError","err","file","inputElem","reason","handleOnRemoveFile","handleRemoveFile","removeFile"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAO,WAAP;AAEA,MAAMC,SAAS,gBAAGJ,KAAK,CAACK,SAAN,EAAlB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMQ,gBAAgB,GAAIC,CAAD,IAAO;AAC9B;AACA,QAAIN,SAAS,CAACO,OAAd,EAAuB;AACrBP,MAAAA,SAAS,CAACO,OAAV,CAAkBC,IAAlB,CAAuBF,CAAvB;AACD;AACF,GALD;;AAOA,QAAMG,YAAY,GAAIN,IAAD,IAAU;AAC7B,QAAIO,WAAW,GAAGP,IAAI,CAACQ,GAAL,CAAUC,IAAD,IAAU;AACnC,UAAIA,IAAI,CAACT,IAAL,CAAUU,MAAV,GAAmBH,WAAvB,EAAoC;AAClCA,QAAAA,WAAW,GAAGE,IAAI,CAACT,IAAL,CAAUU,MAAxB;AACD;;AACD,aAAOH,WAAP;AACD,KALiB,CAAlB;AAMAI,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBL,WAAnB;AACAN,IAAAA,OAAO,CAACD,IAAD,CAAP;AACD,GATD;;AAWA,QAAMa,aAAa,GAAG,CAACC,GAAD,EAAMC,IAAN,EAAYC,SAAZ,EAAuBC,MAAvB,KAAkC;AACtDN,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,GAFD;;AAIA,QAAMI,kBAAkB,GAAIlB,IAAD,IAAU;AACnCC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMmB,gBAAgB,GAAIhB,CAAD,IAAO;AAC9B;AACA,QAAIN,SAAS,CAACO,OAAd,EAAuB;AACrBP,MAAAA,SAAS,CAACO,OAAV,CAAkBgB,UAAlB,CAA6BjB,CAA7B;AACD;AACF,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,SAAD;AACE,MAAA,MAAM,EAAEG,YADV;AAEE,MAAA,OAAO,EAAEO,aAFX;AAGE,MAAA,MAAM,MAHR;AAIE,MAAA,eAAe,MAJjB;AAKE,MAAA,YAAY,EAAEK,kBALhB;AAAA,6BAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAElB;AAAb;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAlDQD,G;;KAAAA,G;AAoDT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport { CSVReader } from 'react-papaparse';\nimport Table from './component/Table';\nimport './App.css';\n\nconst buttonRef = React.createRef()\n\nfunction App() {\n  const [data, setData] = useState([]);\n\n  const handleOpenDialog = (e) => {\n    // Note that the ref is set async, so it might be null at some point \n    if (buttonRef.current) {\n      buttonRef.current.open(e)\n    }\n  }\n  \n  const handleOnDrop = (data) => {\n    let noOfColumns = data.map((item) => {\n      if (item.data.length > noOfColumns) {\n        noOfColumns = item.data.length;\n      }\n      return noOfColumns;\n    })\n    console.log(\"col\", noOfColumns);\n    setData(data);\n  }\n\n  const handleOnError = (err, file, inputElem, reason) => {\n    console.log(err)\n  }\n\n  const handleOnRemoveFile = (data) => {\n    setData(data);\n  }\n\n  const handleRemoveFile = (e) => {\n    // Note that the ref is set async, so it might be null at some point\n    if (buttonRef.current) {\n      buttonRef.current.removeFile(e)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <CSVReader\n        onDrop={handleOnDrop}\n        onError={handleOnError}\n        noDrag\n        addRemoveButton\n        onRemoveFile={handleOnRemoveFile}\n      >\n        <span>Click to upload.</span>\n      </CSVReader>\n      <Table data={data} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}