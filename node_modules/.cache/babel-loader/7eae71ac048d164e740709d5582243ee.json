{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/henil-acespritech/workspace/React/csv_uploader/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport csv from 'csv';\nimport './App.css';\n\nfunction App() {\n  _s();\n\n  const onDrop = useCallback(acceptedFiles => {\n    console.log(acceptedFiles);\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n\n      reader.onabort = () => console.log('file reading was aborted');\n\n      reader.onerror = () => console.log('file reading has failed');\n\n      reader.onload = () => {\n        // Do whatever you want with the file contents\n        const binaryStr = reader.result; // csv.parse(reader.result, (err, data) => {\n\n        console.log(binaryStr); //   console.log(data);\n        // });\n      };\n\n      reader.readAsArrayBuffer(file);\n    });\n  }, []);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropzone\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps(),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag 'n' drop some files here, or click to select files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"G+iBbt33sf7OqOHflSjhXFbwx/Q=\", false, function () {\n  return [useDropzone];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/henil-acespritech/workspace/React/csv_uploader/src/App.js"],"names":["React","useCallback","useDropzone","csv","App","onDrop","acceptedFiles","console","log","forEach","file","reader","FileReader","onabort","onerror","onload","binaryStr","result","readAsArrayBuffer","getRootProps","getInputProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAMC,MAAM,GAAGJ,WAAW,CAAEK,aAAD,IAAmB;AAC5CC,IAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACAA,IAAAA,aAAa,CAACG,OAAd,CAAuBC,IAAD,IAAU;AAC9B,YAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AAEAD,MAAAA,MAAM,CAACE,OAAP,GAAiB,MAAMN,OAAO,CAACC,GAAR,CAAY,0BAAZ,CAAvB;;AACAG,MAAAA,MAAM,CAACG,OAAP,GAAiB,MAAMP,OAAO,CAACC,GAAR,CAAY,yBAAZ,CAAvB;;AACAG,MAAAA,MAAM,CAACI,MAAP,GAAgB,MAAM;AACtB;AACE,cAAMC,SAAS,GAAGL,MAAM,CAACM,MAAzB,CAFoB,CAGpB;;AACEV,QAAAA,OAAO,CAACC,GAAR,CAAYQ,SAAZ,EAJkB,CAKpB;AACA;AACD,OAPD;;AAQAL,MAAAA,MAAM,CAACO,iBAAP,CAAyBR,IAAzB;AAED,KAfD;AAgBD,GAlByB,EAkBvB,EAlBuB,CAA1B;AAmBA,QAAM;AAACS,IAAAA,YAAD;AAAeC,IAAAA;AAAf,MAAgClB,WAAW,CAAC;AAACG,IAAAA;AAAD,GAAD,CAAjD;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,6BACE,oBAASc,YAAY,EAArB;AAAA,gCACE,sBAAWC,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAjCQhB,G;UAqB+BF,W;;;KArB/BE,G;AAmCT,eAAeA,GAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport {useDropzone} from 'react-dropzone';\nimport csv from 'csv';\nimport './App.css';\n\nfunction App() {\n\n  const onDrop = useCallback((acceptedFiles) => {\n    console.log(acceptedFiles)\n    acceptedFiles.forEach((file) => {\n      const reader = new FileReader()\n\n      reader.onabort = () => console.log('file reading was aborted')\n      reader.onerror = () => console.log('file reading has failed')\n      reader.onload = () => {\n      // Do whatever you want with the file contents\n        const binaryStr = reader.result\n        // csv.parse(reader.result, (err, data) => {\n          console.log(binaryStr);\n        //   console.log(data);\n        // });\n      }\n      reader.readAsArrayBuffer(file)\n\n    });\n  }, [])\n  const {getRootProps, getInputProps} = useDropzone({onDrop})\n\n  return (\n    <div className=\"App\">\n      <div  className=\"dropzone\">\n        <div {...getRootProps()}>\n          <input {...getInputProps()} />\n          <p>Drag 'n' drop some files here, or click to select files</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}