{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/henil-acespritech/workspace/React/csv_uploader/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { readString } from 'react-papaparse';\nimport './App.css'; // const buttonRef = React.createRef()\n\nfunction App() {\n  _s();\n\n  // const handleOpenDialog = (e) => {\n  //   // Note that the ref is set async, so it might be null at some point \n  //   if (buttonRef.current) {\n  //     buttonRef.current.open(e)\n  //   }\n  // }\n  // const handleOnFileLoad = (data) => {\n  //   console.log('---------------------------')\n  //   console.log(data)\n  //   console.log('---------------------------')\n  // }\n  // const handleOnError = (err, file, inputElem, reason) => {\n  //   console.log(err)\n  // }\n  // const handleOnRemoveFile = (data) => {\n  //   console.log('---------------------------')\n  //   console.log(data)\n  //   console.log('---------------------------')\n  // }\n  // const handleRemoveFile = (e) => {\n  //   // Note that the ref is set async, so it might be null at some point\n  //   if (buttonRef.current) {\n  //     buttonRef.current.removeFile(e)\n  //   }\n  // }\n  const onDrop = useCallback(acceptedFiles => {\n    console.log(acceptedFiles);\n    acceptedFiles.forEach(file => {\n      const reader = new FileReader();\n\n      reader.onabort = () => console.log('file reading was aborted');\n\n      reader.onerror = () => console.log('file reading has failed');\n\n      reader.onload = () => {\n        // Do whatever you want with the file contents\n        const binaryStr = reader.result;\n        console.log(binaryStr);\n        const results = readString(binaryStr);\n        console.log(\"results\", results);\n      };\n\n      reader.readAsArrayBuffer(file);\n    });\n  }, []);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropzone\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps(),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag 'n' drop some files here, or click to select files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CSVReader, {\n      ref: buttonRef,\n      onFileLoad: this.handleOnFileLoad,\n      onError: this.handleOnError,\n      noClick: true,\n      noDrag: true,\n      onRemoveFile: this.handleOnRemoveFile,\n      children: ({\n        file\n      }) => /*#__PURE__*/_jsxDEV(\"aside\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          marginBottom: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.handleOpenDialog,\n          style: {\n            borderRadius: 0,\n            marginLeft: 0,\n            marginRight: 0,\n            width: '40%',\n            paddingLeft: 0,\n            paddingRight: 0\n          },\n          children: \"Browe file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            borderWidth: 1,\n            borderStyle: 'solid',\n            borderColor: '#ccc',\n            height: 45,\n            lineHeight: 2.5,\n            marginTop: 5,\n            marginBottom: 5,\n            paddingLeft: 13,\n            paddingTop: 3,\n            width: '60%'\n          },\n          children: file && file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            borderRadius: 0,\n            marginLeft: 0,\n            marginRight: 0,\n            paddingLeft: 20,\n            paddingRight: 20\n          },\n          onClick: this.handleRemoveFile,\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"G+iBbt33sf7OqOHflSjhXFbwx/Q=\", false, function () {\n  return [useDropzone];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/henil-acespritech/workspace/React/csv_uploader/src/App.js"],"names":["React","useCallback","useDropzone","readString","App","onDrop","acceptedFiles","console","log","forEach","file","reader","FileReader","onabort","onerror","onload","binaryStr","result","results","readAsArrayBuffer","getRootProps","getInputProps","buttonRef","handleOnFileLoad","handleOnError","handleOnRemoveFile","display","flexDirection","marginBottom","handleOpenDialog","borderRadius","marginLeft","marginRight","width","paddingLeft","paddingRight","borderWidth","borderStyle","borderColor","height","lineHeight","marginTop","paddingTop","name","handleRemoveFile"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport {useDropzone} from 'react-dropzone';\nimport { readString } from 'react-papaparse'\nimport './App.css';\n\n// const buttonRef = React.createRef()\n\nfunction App() {\n  // const handleOpenDialog = (e) => {\n  //   // Note that the ref is set async, so it might be null at some point \n  //   if (buttonRef.current) {\n  //     buttonRef.current.open(e)\n  //   }\n  // }\n  \n  // const handleOnFileLoad = (data) => {\n  //   console.log('---------------------------')\n  //   console.log(data)\n  //   console.log('---------------------------')\n  // }\n\n  // const handleOnError = (err, file, inputElem, reason) => {\n  //   console.log(err)\n  // }\n\n  // const handleOnRemoveFile = (data) => {\n  //   console.log('---------------------------')\n  //   console.log(data)\n  //   console.log('---------------------------')\n  // }\n\n  // const handleRemoveFile = (e) => {\n  //   // Note that the ref is set async, so it might be null at some point\n  //   if (buttonRef.current) {\n  //     buttonRef.current.removeFile(e)\n  //   }\n  // }\n\n  const onDrop = useCallback((acceptedFiles) => {\n    console.log(acceptedFiles)\n    acceptedFiles.forEach((file) => {\n      const reader = new FileReader()\n\n      reader.onabort = () => console.log('file reading was aborted')\n      reader.onerror = () => console.log('file reading has failed')\n      reader.onload = () => {\n      // Do whatever you want with the file contents\n        const binaryStr = reader.result\n        console.log(binaryStr);\n        const results = readString(binaryStr)\n        console.log(\"results\",results);\n\n      }\n      reader.readAsArrayBuffer(file)\n\n    });\n  }, [])\n  const {getRootProps, getInputProps} = useDropzone({onDrop})\n\n  return (\n    <div className=\"App\">\n      <div  className=\"dropzone\">\n        <div {...getRootProps()}>\n          <input {...getInputProps()} />\n          <p>Drag 'n' drop some files here, or click to select files</p>\n        </div>\n      </div>\n      <CSVReader\n        ref={buttonRef}\n        onFileLoad={this.handleOnFileLoad}\n        onError={this.handleOnError}\n        noClick\n        noDrag\n        onRemoveFile={this.handleOnRemoveFile}\n      >\n        {({ file }) => (\n          <aside\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              marginBottom: 10\n            }}\n          >\n            <button\n              type='button'\n              onClick={this.handleOpenDialog}\n              style={{\n                borderRadius: 0,\n                marginLeft: 0,\n                marginRight: 0,\n                width: '40%',\n                paddingLeft: 0,\n                paddingRight: 0\n              }}\n            >\n              Browe file\n            </button>\n            <div\n              style={{\n                borderWidth: 1,\n                borderStyle: 'solid',\n                borderColor: '#ccc',\n                height: 45,\n                lineHeight: 2.5,\n                marginTop: 5,\n                marginBottom: 5,\n                paddingLeft: 13,\n                paddingTop: 3,\n                width: '60%'\n              }}\n            >\n              {file && file.name}\n            </div>\n            <button\n              style={{\n                borderRadius: 0,\n                marginLeft: 0,\n                marginRight: 0,\n                paddingLeft: 20,\n                paddingRight: 20\n              }}\n              onClick={this.handleRemoveFile}\n            >\n              Remove\n            </button>\n          </aside>\n        )}\n      </CSVReader>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}