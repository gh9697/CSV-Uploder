{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/henil-acespritech/workspace/React/csv_uploader/src/component/Table.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { CSVLink } from 'react-csv';\nimport HeadSelector from './FieldSelection';\nimport './Table.css';\nconst buttonRef = /*#__PURE__*/React.createRef();\n\nclass Table extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderTableData = object => {\n      return object.data.map((data, index) => {\n        return /*#__PURE__*/_jsxDEV(\"td\", {\n          children: data\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this);\n      });\n    };\n\n    this.handleClick = e => {\n      if (e.target.nodeName === 'INPUT' && e.target.parentElement.nodeName === 'TH') {\n        let tbody = document.getElementsByTagName('tbody')[0],\n            checks = [...tbody.getElementsByTagName('input')],\n            rows = [...tbody.children];\n        console.log(rows);\n        rows.forEach(it => {\n          it.classList.remove('selection');\n        });\n\n        if (e.target.checked) {\n          checks.forEach((item, index) => {\n            item.checked = true;\n            rows[index].classList.add('selection');\n          });\n        } else {\n          checks.forEach((item, index) => {\n            item.checked = false;\n            rows[index].classList.remove('selection');\n          });\n        }\n      }\n    };\n\n    this.handleSingleCheck = event => {\n      if (event.shiftKey) {\n        event.target.parentElement.parentElement.classList.toggle('selection');\n      }\n\n      event.target.parentElement.parentElement.classList.toggle('selection');\n    };\n\n    this.handleDeleteClick = () => {\n      document.querySelectorAll('.selection').forEach(node => {\n        node.remove();\n      });\n    };\n\n    this.getExportData = () => {\n      const exportData = [];\n      document.querySelectorAll('.selection').forEach(node => {\n        console.log(node.querySelectorAll(\"td\"));\n        const line = [];\n        node.querySelectorAll(\"td\").forEach(subnode => {\n          line.push(subnode.innerText);\n        });\n        line.shift();\n        exportData.push(line);\n      });\n      return exportData;\n    };\n\n    this.handleExportClick = async () => {\n      const result = await this.getExportData();\n      this.setState({\n        exportdata: result\n      }, () => {\n        buttonRef.current.link.click();\n      });\n    };\n\n    console.log(props);\n    this.state = {\n      exportdata: props.data\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleDeleteClick,\n          children: \"Delete Row(s)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleExportClick,\n          children: \"Export Row(s)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CSVLink, {\n          data: this.state.exportdata,\n          filename: 'UserData.csv',\n          className: \"hidden\",\n          ref: buttonRef,\n          target: \"_blank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"Info\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onClick: e => this.handleClick(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(HeadSelector, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(HeadSelector, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(HeadSelector, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(HeadSelector, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.props.data && this.props.data.map((value, index) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              \"data-index\": index,\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  onClick: e => this.handleSingleCheck(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 41\n              }, this), this.renderTableData(value)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 40\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["/home/henil-acespritech/workspace/React/csv_uploader/src/component/Table.js"],"names":["React","Component","useState","useEffect","CSVLink","HeadSelector","buttonRef","createRef","Table","constructor","props","renderTableData","object","data","map","index","handleClick","e","target","nodeName","parentElement","tbody","document","getElementsByTagName","checks","rows","children","console","log","forEach","it","classList","remove","checked","item","add","handleSingleCheck","event","shiftKey","toggle","handleDeleteClick","querySelectorAll","node","getExportData","exportData","line","subnode","push","innerText","shift","handleExportClick","result","setState","exportdata","current","link","click","state","render","value"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect  } from 'react';\nimport {CSVLink} from 'react-csv';\nimport HeadSelector from './FieldSelection';\nimport './Table.css';\n\nconst buttonRef = React.createRef()\n\nclass Table extends Component {\n    constructor(props){ \n        super(props);\n        console.log(props); \n        this.state = { exportdata : props.data}\n    } \n\n\n    renderTableData = (object) => {\n        return object.data.map((data,index) => {\n            return  <td key={index}>{data}</td>;\n        });\n    }\n\n    handleClick= (e) => {\n        if(e.target.nodeName === 'INPUT' && e.target.parentElement.nodeName === 'TH'){\n            let tbody = document.getElementsByTagName('tbody')[0],\n            checks = [...tbody.getElementsByTagName('input')],\n            rows = [...tbody.children];\n            console.log(rows)\n            rows.forEach((it)=>{\n                it.classList.remove('selection');\n            });\n            if(e.target.checked){\n               checks.forEach((item,index)=>{\n                  item.checked = true;\n                 rows[index].classList.add('selection');\n               });              \n            }\n            else{\n               checks.forEach((item,index)=>{\n                  item.checked = false;\n                 rows[index].classList.remove('selection');\n               });\n            }  \n        }\n    }\n\n    handleSingleCheck = (event) => {\n        if(event.shiftKey){\n            event.target.parentElement.parentElement.classList.toggle('selection');\n        }\n        event.target.parentElement.parentElement.classList.toggle('selection');\n    }\n\n    handleDeleteClick= () => {\n        document.querySelectorAll('.selection').forEach(node =>{\n            node.remove();\n        });\n    }\n\n    getExportData = ()  => {\n        const exportData = []\n        document.querySelectorAll('.selection').forEach(node =>{\n            console.log(node.querySelectorAll(\"td\"));\n            const line = [];\n            node.querySelectorAll(\"td\").forEach( subnode => {\n                line.push(subnode.innerText)\n            });\n            line.shift();\n            exportData.push(line)\n        });\n        return exportData;\n    }\n\n    handleExportClick = async () => {\n        const result = await this.getExportData()\n        this.setState({ exportdata : result }, () => {\n            buttonRef.current.link.click()\n        });\n    }\n\n    render() {\n        return (\n            <>\n                <div>\n                    <button onClick={this.handleDeleteClick}>Delete Row(s)</button>\n                    <button onClick={this.handleExportClick}>Export Row(s)</button>\n                    <CSVLink\n                        data={this.state.exportdata}\n                        filename={'UserData.csv'}\n                        className=\"hidden\"\n                        ref={buttonRef}\n                        target=\"_blank\" \n                    />\n                </div>\n                <table id=\"Info\">\n                    <thead>\n                        <tr>\n                            <th><input type=\"checkbox\" onClick={(e) => this.handleClick(e)}/></th>\n                            <th><HeadSelector/></th>\n                            <th><HeadSelector/></th>\n                            <th><HeadSelector/></th>\n                            <th><HeadSelector/></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        { this.props.data &&   \n                            this.props.data.map((value,index) => {\n                                return <tr key={index} data-index={index}>\n                                        <td><input type=\"checkbox\" onClick={(e) => this.handleSingleCheck(e)}/></td>\n                                        {this.renderTableData(value)}\n                                    </tr>;\n                            })\n                        }\n                    </tbody>\n                </table>\n            </>\n        )\n    }\n}\nexport default Table;"]},"metadata":{},"sourceType":"module"}